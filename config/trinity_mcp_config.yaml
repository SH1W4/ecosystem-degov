# Trinity MCP Configuration
# Configuração do Model Context Protocol para integração com LLMs e IDEs

server:
  name: "Trinity MCP Server"
  version: "1.0.0"
  port: 8080
  host: "0.0.0.0"
  max_connections: 1000
  timeout: 30

# Configurações de conexão MCP
connections:
  llm:
    openai:
      enabled: true
      endpoint: "https://api.openai.com/v1"
      api_key_env: "OPENAI_API_KEY"
      capabilities:
        - "text_generation"
        - "code_analysis"
        - "optimization_suggestions"
        - "pattern_recognition"
        - "ecosystem_analysis"
    
    anthropic:
      enabled: true
      endpoint: "https://api.anthropic.com/v1"
      api_key_env: "ANTHROPIC_API_KEY"
      capabilities:
        - "text_generation"
        - "code_analysis"
        - "optimization_suggestions"
        - "pattern_recognition"
        - "ecosystem_analysis"
    
    claude:
      enabled: true
      endpoint: "https://api.anthropic.com/v1"
      api_key_env: "CLAUDE_API_KEY"
      capabilities:
        - "text_generation"
        - "code_analysis"
        - "optimization_suggestions"
        - "pattern_recognition"
        - "ecosystem_analysis"

  ide:
    vscode:
      enabled: true
      endpoint: "ws://localhost:3000"
      capabilities:
        - "code_editing"
        - "debugging"
        - "testing"
        - "deployment"
        - "file_management"
    
    cursor:
      enabled: true
      endpoint: "ws://localhost:3001"
      capabilities:
        - "code_editing"
        - "debugging"
        - "testing"
        - "deployment"
        - "file_management"
        - "ai_assistance"
    
    intellij:
      enabled: true
      endpoint: "ws://localhost:3002"
      capabilities:
        - "code_editing"
        - "debugging"
        - "testing"
        - "deployment"
        - "file_management"
        - "refactoring"

  blockchain:
    ethereum:
      enabled: true
      endpoint: "https://mainnet.infura.io/v3/"
      api_key_env: "INFURA_API_KEY"
      capabilities:
        - "smart_contract_interaction"
        - "transaction_monitoring"
        - "gas_optimization"
        - "cross_chain_sync"
    
    polygon:
      enabled: true
      endpoint: "https://polygon-mainnet.infura.io/v3/"
      api_key_env: "INFURA_API_KEY"
      capabilities:
        - "smart_contract_interaction"
        - "transaction_monitoring"
        - "gas_optimization"
        - "cross_chain_sync"
    
    celo:
      enabled: true
      endpoint: "https://forno.celo.org"
      capabilities:
        - "smart_contract_interaction"
        - "transaction_monitoring"
        - "gas_optimization"
        - "cross_chain_sync"
    
    xrpl:
      enabled: true
      endpoint: "wss://xrplcluster.com"
      capabilities:
        - "smart_contract_interaction"
        - "transaction_monitoring"
        - "gas_optimization"
        - "cross_chain_sync"

  database:
    postgresql:
      enabled: true
      endpoint: "postgresql://localhost:5432/ecosystem_degov"
      capabilities:
        - "data_storage"
        - "query_optimization"
        - "backup_management"
        - "performance_monitoring"
    
    mongodb:
      enabled: true
      endpoint: "mongodb://localhost:27017/ecosystem_degov"
      capabilities:
        - "document_storage"
        - "query_optimization"
        - "backup_management"
        - "performance_monitoring"

# Configurações do ecossistema
ecosystem:
  tokens:
    - symbol: "GST"
      name: "Green Sustainability Token"
      health_threshold: 0.90
      optimization_interval: 300 # 5 minutos
    
    - symbol: "AET"
      name: "AI Ethics Token"
      health_threshold: 0.90
      optimization_interval: 300
    
    - symbol: "ECT"
      name: "EcoToken"
      health_threshold: 0.90
      optimization_interval: 300
    
    - symbol: "CCR"
      name: "Carbon Credit Token"
      health_threshold: 0.90
      optimization_interval: 300
    
    - symbol: "ECS"
      name: "EcoScore Token"
      health_threshold: 0.90
      optimization_interval: 300
    
    - symbol: "ECR"
      name: "EcoCertificate Token"
      health_threshold: 0.90
      optimization_interval: 300
    
    - symbol: "EST"
      name: "EcoStake Token"
      health_threshold: 0.90
      optimization_interval: 300
    
    - symbol: "EGM"
      name: "EcoGem Token"
      health_threshold: 0.90
      optimization_interval: 300

  blockchains:
    - chain_id: "ethereum"
      name: "Ethereum Mainnet"
      health_threshold: 0.95
      sync_interval: 60 # 1 minuto
    
    - chain_id: "polygon"
      name: "Polygon Network"
      health_threshold: 0.95
      sync_interval: 60
    
    - chain_id: "celo"
      name: "Celo Network"
      health_threshold: 0.95
      sync_interval: 60
    
    - chain_id: "xrpl"
      name: "XRPL Network"
      health_threshold: 0.95
      sync_interval: 60

  integrations:
    - integration_id: "guardflow"
      name: "GuardFlow Retail Integration"
      health_threshold: 0.90
      sync_interval: 120 # 2 minutos
    
    - integration_id: "guarddrive"
      name: "GuardDrive Mobility Integration"
      health_threshold: 0.90
      sync_interval: 120
    
    - integration_id: "virtual_protocol"
      name: "Virtual Protocol AI Integration"
      health_threshold: 0.90
      sync_interval: 120
    
    - integration_id: "esg_data"
      name: "ESG Data Provider Integration"
      health_threshold: 0.90
      sync_interval: 120

# Configurações de monitoramento
monitoring:
  enabled: true
  interval: 60 # segundos
  metrics:
    - "ecosystem_health"
    - "token_performance"
    - "blockchain_sync"
    - "integration_status"
    - "ai_ethics_scoring"
    - "esg_impact_analysis"
  
  alerts:
    health_threshold: 0.85
    performance_threshold: 0.80
    error_threshold: 0.05
  
  logging:
    level: "info"
    format: "json"
    output: "stdout"

# Configurações de otimização
optimization:
  enabled: true
  interval: 300 # 5 minutos
  strategies:
    - "gas_optimization"
    - "liquidity_improvement"
    - "cross_chain_sync"
    - "ai_ethics_scoring"
    - "esg_impact_measurement"
    - "user_experience"
    - "blockchain_performance"
    - "integration_response_times"
  
  learning:
    enabled: true
    pattern_recognition: true
    performance_analysis: true
    user_feedback: true
    market_insights: true

# Configurações de segurança
security:
  enabled: true
  authentication:
    required: true
    method: "api_key"
    api_key_env: "TRINITY_API_KEY"
  
  encryption:
    enabled: true
    algorithm: "AES-256-GCM"
    key_env: "TRINITY_ENCRYPTION_KEY"
  
  rate_limiting:
    enabled: true
    requests_per_minute: 1000
    burst_limit: 100
  
  cors:
    enabled: true
    allowed_origins:
      - "http://localhost:3000"
      - "http://localhost:3001"
      - "http://localhost:3002"
    allowed_methods:
      - "GET"
      - "POST"
      - "PUT"
      - "DELETE"
    allowed_headers:
      - "Content-Type"
      - "Authorization"

# Configurações de backup
backup:
  enabled: true
  interval: 3600 # 1 hora
  retention: 7 # dias
  storage:
    type: "local"
    path: "./backups"
  
  data:
    - "ecosystem_state"
    - "learning_data"
    - "performance_metrics"
    - "user_feedback"
    - "market_insights"

# Configurações de desenvolvimento
development:
  debug: true
  hot_reload: true
  profiling: true
  testing:
    enabled: true
    coverage: true
    integration_tests: true
  
  documentation:
    enabled: true
    auto_generate: true
    format: "markdown"
    output: "./docs"
